version: '3.4'

networks:
  identity-network:

services:
  k8sdemo-app:
    container_name: k8sdemoappcontainer
    image: masenellomarco/k8sdemoapp:latest
    build: 
      context: K8sDemoApp
      dockerfile: k8sdemoapp_dockerfile
    restart: always
    networks: 
      - identity-network
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    depends_on:
      - k8sDemo-api
      - k8sDemo-rabbitMq
      - k8sDemo-hub-manager
    volumes: 
      - D:\Code\K8sDemo\Certificates\:/etc/nginx/certs
      - D:\Logs\k8sDemo-app\:/home/logs


  k8sdemo-api:
    container_name: k8sdemoapicontainer
    image: masenellomarco/k8sdemoapi:latest
    build: 
      context: .
      dockerfile: K8sDemoApi\k8sdemoapi-dockerfile
    restart: always
    networks: 
      - identity-network
    ports:
      - 5501:5501
    depends_on:
      - k8sDemo-database
      - k8sDemo-rabbitMq
      - k8sDemo-hub-manager
    environment:
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/app/Infrastructure/Certificate/certificate.pfx"
      ASPNETCORE_Kestrel__Certificates__Default__Password: "Password"
    volumes:
      - D:\Code\K8sDemo\Certificates\:/app/Infrastructure/Certificate

  k8sdemo-hub-manager:
    container_name: k8sdemohubmanagercontainer
    image: masenellomarco/k8sdemohubmanager:latest
    build: 
      context: .
      dockerfile: K8sDemoHubManager\k8sdemohubmanager-dockerfile
    restart: always
    networks: 
      - identity-network
    ports:
      - 5001:5001
    depends_on:
      - k8sDemo-database
      - k8sDemo-rabbitMq
    environment:
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/app/Infrastructure/Certificate/certificate.pfx"
      ASPNETCORE_Kestrel__Certificates__Default__Password: "Password"
    volumes:
      - D:\Code\K8sDemo\Certificates\:/app/Infrastructure/Certificate

  k8sdemo-director:
    container_name: k8sdemodirectorcontainer
    image: masenellomarco/k8sdemodirector:latest
    build: 
      context: .
      dockerfile: K8sDemoDirector\k8sdemodirector-dockerfile
    restart: always
    networks: 
      - identity-network
    depends_on:
      - k8sDemo-database
      - k8sDemo-rabbitMq
      - k8sDemo-hub-manager

  k8sdemo-worker:
    container_name: k8sdemoworkercontainer
    image: masenellomarco/k8sdemoworker:latest
    build: 
      context: .
      dockerfile: K8sDemoWorker\k8sdemoworker-dockerfile
    restart: always
    networks: 
      - identity-network
    depends_on:
      - k8sDemo-database
      - k8sDemo-rabbitMq
      - k8sDemo-hub-manager
      - k8sDemo-director

  k8sdemo-logmanager:
    container_name: k8sdemologmanagercontainer
    image: masenellomarco/k8sdemologmanager:latest
    build: 
      context: .
      dockerfile: K8sDemoLogManager\k8sdemologmanager-dockerfile
    restart: always
    networks: 
      - identity-network
    depends_on:
      - k8sDemo-rabbitMq
    volumes:
      - D:\Logs\:/app/Logs

  k8sdemo-database:
    container_name: k8sdemoapidbcontainer
    image: masenellomarco/k8sdemosqlserver:latest
    build: 
      context: .
      dockerfile: K8sDemoSqlServer\k8sdemosqlserver-dockerfile
    networks: 
      - identity-network
    ports:
      - 1433:1433
    restart: always
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Pass@Word1"
    volumes:
      - D:\Code\K8sDemo\DbMount\:/var/opt/mssql
      - D:\Logs\k8sDemo-database\:/home/logs

  k8sdemo-rabbitmq:
    container_name: k8sdemorabbitmqcontainer
    image: masenellomarco/k8sdemorabbitmq:latest
    build: 
      context: .
      dockerfile: K8sDemoRabbitMq\k8sdemorabbitmq-dockerfile
    networks: 
      - identity-network
    ports:
      - 5672:5672
      - 15672:15672
    restart: always
    hostname: k8sdemo-rabbitmq
    volumes:
      - D:\Logs\k8sDemo-rabbitMq\:/home/logs

